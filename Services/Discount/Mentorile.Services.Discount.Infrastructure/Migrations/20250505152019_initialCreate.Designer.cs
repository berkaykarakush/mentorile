// <auto-generated />
using System;
using Mentorile.Services.Discount.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mentorile.Services.Discount.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250505152019_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Mentorile.Services.Discount.Domain.Entities.Discount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Rate")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Discounts", "discounting");
                });

            modelBuilder.Entity("Mentorile.Services.Discount.Domain.Entities.DiscountUser", b =>
                {
                    b.Property<string>("DiscountId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("DiscountId", "UserId");

                    b.ToTable("DiscountUsers", "discounting");
                });

            modelBuilder.Entity("Mentorile.Services.Discount.Domain.Entities.DiscountUser", b =>
                {
                    b.HasOne("Mentorile.Services.Discount.Domain.Entities.Discount", "Discount")
                        .WithMany("DiscountUsers")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Mentorile.Services.Discount.Domain.Entities.Discount", b =>
                {
                    b.Navigation("DiscountUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
